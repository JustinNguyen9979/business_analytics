version: '3.8'

services:
  backend:
    build:
      context: ./backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend/app:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - cache
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    restart: unless-stopped

  # === SERVICE WORKER CHỈ LÀM VIỆC ===
  worker:
    build: { context: ./backend }
    # Bỏ cờ -B
    command: celery -A celery_worker.celery_app worker --loglevel=info -P gevent
    volumes: [ ./backend/app:/app ]
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on: [ db, cache, backend ]
    restart: unless-stopped

  # === SERVICE BEAT MỚI CHỈ ĐỂ LẬP LỊCH ===
  beat:
    build: { context: ./backend }
    # Lệnh riêng cho beat
    command: celery -A celery_worker.celery_app beat --loglevel=info
    volumes: [ ./backend/app:/app ]
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on: [ db, cache, backend ]
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev # Sử dụng Dockerfile phát triển
    volumes:
      - ./frontend:/app # Ánh xạ toàn bộ thư mục frontend vào container
      - /app/node_modules # Loại trừ node_modules để không bị ghi đè bởi thư mục rỗng trên máy host
    ports:
      - "5173:5173" # Ánh xạ port của Vite dev server ra ngoài
    restart: unless-stopped
    depends_on:
      - backend

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    restart: unless-stopped

  cache:
    image: redis:6.2-alpine
    restart: always
    ports: [ '6379:6379' ]
    command: redis-server --save 20 1 --loglevel warning

volumes:
  postgres_data: